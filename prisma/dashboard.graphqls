type User {
    id: ID! @unique
    name: String!
    passwd: String!
    email: String!
    widgetSpec: [Widget!]! @relation(name: "WidgetsOfUser" onDelete: CASCADE)
    token: String
    connectionDate: DateTime
}

type Widget {
    id: ID! @unique
    name: String!
    slugname: String!
    config: Config! @relation(name: "WidgetConfig" onDelete: CASCADE)
    enable: Boolean!
    needAuth: Boolean!
    authenticate: Boolean!
    authentication: Auth! @relation(name: "Authentication" onDelete: CASCADE)
}

type Config {
    posX: Int!
    posY: Int!
    height: Int!
    minHeight: Int!
    maxHeight: Int!
    width: Int!
    minWidth: Int!
    maxWidth: Int!
    static: Boolean!
    specification: String
}

type Auth {
    id: ID! @unique
    type: String!
    accessToken: String!
    refreshToken: String!
    expire: Int!
}